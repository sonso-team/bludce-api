package org.sonso.bludceapi.config.properties

import com.fasterxml.jackson.module.kotlin.jacksonObjectMapper
import org.sonso.bludceapi.dto.ReceiptPosition

object GigachatPrompts {
    fun receiptOcrToJsonPosition(ocrText: String) = """
        Ты — помощник, который обрабатывает текст, распознанный с фотографии кассового чека.

        Ниже — текст, распознанный OCR. В нём перечислены блюда или товары с указанием количества и суммы. 
        Некоторые строки могут содержать служебную информацию: например, слова "ИТОГ", "СУММА", "ОПЛАТА", "VISA", "СПАСИБО", имя официанта, QR-код — такие строки необходимо **исключить** из результата.

        Твоя задача:
        1. Найди все строки, которые содержат **позиции заказа**: название, количество (если есть) и итоговую цену.
        2. Верни результат в виде **валидного JSON-массива**. Каждый объект должен быть в формате:

        {
          "name": "название блюда",
          "quantity": целое число (если не указано или <= 0, то считать равным 1),
          "price": вещественное число (в рублях)
        }

        !!! Очень важно:
        - Не пиши никаких комментариев внутри JSON (например, `//` или `/* */`) — только чистый JSON.
        - Не пиши поясняющий текст до или после — только JSON.
        - Если в строке указано два числа, первое — это количество (например, "2 578,00"), а второе — итоговая сумма.
        - Если количество и цена перепутаны, и одно из чисел больше 100, то это, скорее всего, цена.
        - Если сомневаешься между двумя числами, выбери меньшее как `quantity`, большее — как `price`.
        - quantity не может быть больше 8 — если значение больше, то заменить на 8.

        Исключить из результата строки, содержащие:
        - служебную информацию: "ИТОГО", "сумма заказов", "менеджер", "счёт", "открыт", "официант", "стол", "заказ", "отзывы", "QR", "наличные", "безналичные", "спасибо", "печати"
        - строки без чисел

        Вот текст чека:
        $ocrText
    """.trimIndent()

    fun correctPositionName(positions: List<ReceiptPosition>) = """
        Ты — помощник, который получает список позиций счета в формате JSON.
        Каждая позиция имеет поля:
          • name     — название блюда, иногда распознано OCR-ом с ошибками,
                       может содержать случайные символы, смешанный регистр,
                       лишние «/» между словами, дублирующиеся пробелы,
                       транслитерацию («PoluSuhaj cidr») и т.д.
          • quantity — целое число; менять НЕЛЬЗЯ.
          • price    — число (руб.); менять НЕЛЬЗЯ.

        Твоя задача:
        1. Для каждого объекта аккуратно исправь поле **name**:
           – убери случайные символы («/», «\», «*», «#» и т.п.),
           – нормализуй регистр (первые буквы слов — заглавные, остальные строчные),
           – исправь очевидные OCR-опечатки («ПолУСУХаЙ сидР» → «Полусухой сидр»,
             «КорианДя» → «Кориандр»),
           – сохрани порядок слов («Настойка на водке Авокадо» вместо «Настойка на волке Авскадо»),
           – не придумывай новых блюд; опирайся на наиболее вероятное русское
             или международное (латиницей) название.
        2. Не трогай quantity и price.
        3. Верни **только** JSON-массив того же формата, без комментариев
           и любого дополнительного текста до или после.

        Пример того, что нужно исправить:
        ВХОД:
        [
          { "name": "ПолУСУХаЙ сидР 0.5", "quantity": 2, "price": 300.0 },
          { "name": "Настойка на волке Авскадо-адвскат", "quantity": 1, "price": 220.0 },
          { "name": "Тартар/КорианДя", "quantity": 1, "price": 450.0 }
        ]
        ВЫХОД:
        [
          { "name": "Полусухой сидр 0.5",  "quantity": 2, "price": 300.0 },
          { "name": "Настойка на водке Авокадо-адвокат",  "quantity": 2, "price": 300.0 },
          { "name": "Тартар/Кориандр", "quantity": 1, "price": 450.0 }
        ]

        Вот текущий список позиций:
        ${jacksonObjectMapper().writeValueAsString(positions)}
    """.trimIndent()
}
